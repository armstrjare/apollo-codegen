{"version":3,"sources":["../../src/swift/language.js"],"names":["classDeclaration","structDeclaration","propertyDeclaration","propertyDeclarations","protocolDeclaration","protocolPropertyDeclaration","protocolPropertyDeclarations","generator","closure","className","modifiers","superClass","adoptedProtocols","properties","printNewlineIfNeeded","printNewline","print","pushScope","typeName","withinBlock","popScope","structName","description","printOnNewline","propertyName","forEach","property","protocolName"],"mappings":"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","file":"language.js","sourcesContent":["import {\n  join,\n  wrap,\n} from '../utilities/printing';\n\nexport function classDeclaration(generator, { className, modifiers, superClass, adoptedProtocols = [], properties }, closure) {\n  generator.printNewlineIfNeeded();\n  generator.printNewline();\n  generator.print(wrap('', join(modifiers, ' '), ' '));\n  generator.print(`class ${ className }`);\n  generator.print(wrap(': ', join([superClass, ...adoptedProtocols], ', ')));\n  generator.pushScope({ typeName: className });\n  generator.withinBlock(closure);\n  generator.popScope();\n}\n\nexport function structDeclaration(generator, { structName, description, adoptedProtocols = [] }, closure) {\n  generator.printNewlineIfNeeded();\n  generator.printOnNewline(description && `/// ${description}`);\n  generator.printOnNewline(`public struct ${structName}`);\n  generator.print(wrap(': ', join(adoptedProtocols, ', ')));\n  generator.pushScope({ typeName: structName });\n  generator.withinBlock(closure);\n  generator.popScope();\n}\n\nexport function propertyDeclaration(generator, { propertyName, typeName, description }) {\n  generator.printOnNewline(`public let ${propertyName}: ${typeName}`);\n  generator.print(description && ` /// ${description}`);\n}\n\nexport function propertyDeclarations(generator, properties) {\n  if (!properties) return;\n  properties.forEach(property => propertyDeclaration(generator, property));\n}\n\nexport function protocolDeclaration(generator, { protocolName, adoptedProtocols, properties }, closure) {\n  generator.printNewlineIfNeeded();\n  generator.printOnNewline(`public protocol ${protocolName}`);\n  generator.print(wrap(': ', join(adoptedProtocols, ', ')));\n  generator.pushScope({ typeName: protocolName });\n  generator.withinBlock(closure);\n  generator.popScope();\n}\n\nexport function protocolPropertyDeclaration(generator, { propertyName, typeName }) {\n  generator.printOnNewline(`var ${propertyName}: ${typeName} { get }`);\n}\n\nexport function protocolPropertyDeclarations(generator, properties) {\n  if (!properties) return;\n  properties.forEach(property => protocolPropertyDeclaration(generator, property));\n}\n"]}